require 'digest'

class Socio < ActiveRecord::Base

  PASSWORD_SALT = '951737830e37c48f4f8ca0fcd4c298d1827e600e'
  
  attr_accessible :cpf, :nome, :capital, :senha, :senha_confirmation
  
  validates :cpf, :presence => true, :uniqueness => true, :numericality => true
  validates :nome, :presence => true, :length => { :within => 3 ... 255}
  validates :senha, :presence => true, :confirmation => true, :length => { :within => 8 ... 64}
  validates :capital, :presence => true, :numericality => true
  
  before_save :update_montante_real_factory
  
  before_save :hash_password
  
  def self.autenticar(cpf, senha)
    return find_by_cpf_and_senha(cpf, Socio.hash_string(senha))
  end
  
  def hash_password
    self.senha = Socio.hash_string(self.senha)
  end
  
  def self.hash_string(string)
    return Digest::SHA1.hexdigest(string)
  end
  
  #Obtém o percentual do sócio baseado no somatório
  #do capital real e aplicado da factory
  def percentual
    return capital * 100 / Capital.find(1).montante
  end
  
  #Altera montante real da factory no momento da criação do sócio
  def update_montante_real_factory
    if new_record?
      capital_factory = Capital.find(1)
      capital_factory.montante_real += capital
      return capital_factory.save()
    end
  end
  
  def to_s
    return self.nome
  end
end
